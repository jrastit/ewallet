type = "directrequest"
schemaVersion = 1
name = "Domain owner"
# Optional External Job ID: Automatically generated if unspecified
externalJobID = "b1d42cd5-4a3a-4200-b1f7-25a68e48aad8"
contractAddress = "0x5932DbD6255D1837bFb5E9AbB2bea59Eb0474525"
maxTaskDuration = "0s"
observationSource = """
    decode_log   [type="ethabidecodelog"
                  abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                  data="$(jobRun.logData)"
                  topics="$(jobRun.logTopics)"]

    decode_cbor  [type="cborparse" data="$(decode_log.data)"]
    fetch [type="http"
              method=POST
              url="https://nft4.domains/api/dns/owner"
              requestData="{\\"domain\\": $(decode_cbor.domain)}"
              allowUnrestrictedNetworkAccess=true
              ]
    parse [type="jsonparse"
            data="$(fetch)"
            path="domain,txt,nft4domains,owner"]
    encode_data  [type="ethabiencode" abi="(address value)" data="{ \\"value\\": $(parse) }"]
    encode_data2  [type="ethabiencode" abi="(bytes32 value)" data="{ \\"value\\": $(encode_data) }"]
    encode_tx    [type="ethabiencode"
                  abi="fulfillOracleRequest(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes32 data)"
                  data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data2)}"
                 ]
    submit_tx    [type="ethtx" to="0x5932DbD6255D1837bFb5E9AbB2bea59Eb0474525" data="$(encode_tx)"]

    decode_log -> decode_cbor -> fetch -> parse -> encode_data -> encode_data2 -> encode_tx -> submit_tx
"""
